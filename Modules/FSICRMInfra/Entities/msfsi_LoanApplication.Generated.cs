//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Microsoft.CloudForFSI.Tables
{
	using Microsoft.CloudForFSI.OptionSets;

	[System.Runtime.Serialization.DataContractAttribute()]
	public enum msfsi_LoanApplicationState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// The application the customer is submitting for a loan
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("msfsi_loanapplication")]
	public partial class msfsi_LoanApplication : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msfsi_LoanApplication() : 
				base(EntityLogicalName)
		{
		}
		
		public const string AlternateKeys = "msfsi_integrationkey";
		
		public const string EntityLogicalName = "msfsi_loanapplication";
		
		public const string EntitySchemaName = "msfsi_LoanApplication";
		
		public const string PrimaryIdAttribute = "msfsi_loanapplicationid";
		
		public const string PrimaryNameAttribute = "msfsi_name";
		
		public const string EntityLogicalCollectionName = "msfsi_loanapplications";
		
		public const string EntitySetName = "msfsi_loanapplications";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date when the loan application was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Exchange rate for the currency associated with the entity with respect to the base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_amortizationtype")]
		public virtual msfsi_LoanApplication_msfsi_AmortizationType? msfsi_AmortizationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_AmortizationType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_amortizationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_AmortizationType");
				this.SetAttributeValue("msfsi_amortizationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_AmortizationType");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_applicationnumber")]
		public string msfsi_Applicationnumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_applicationnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_Applicationnumber");
				this.SetAttributeValue("msfsi_applicationnumber", value);
				this.OnPropertyChanged("msfsi_Applicationnumber");
			}
		}
		
		/// <summary>
		/// The type of the loan application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_applicationtype")]
		public virtual msfsi_LoanApplication_msfsi_ApplicationType? msfsi_ApplicationType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_ApplicationType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_applicationtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_ApplicationType");
				this.SetAttributeValue("msfsi_applicationtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_ApplicationType");
			}
		}
		
		/// <summary>
		/// Final Balloon payment required to fully pay off the loan
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_balloonamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_BalloonAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_balloonamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_BalloonAmount");
				this.SetAttributeValue("msfsi_balloonamount", value);
				this.OnPropertyChanged("msfsi_BalloonAmount");
			}
		}
		
		/// <summary>
		/// Value of the Balloon Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_balloonamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_balloonamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_balloonamount_base");
			}
		}
		
		/// <summary>
		/// Term in months for Balloon mortgage if "Is Balloon Payment" indicator is "Yes"
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_balloontermcount")]
		public System.Nullable<int> msfsi_BalloonTermCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msfsi_balloontermcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_BalloonTermCount");
				this.SetAttributeValue("msfsi_balloontermcount", value);
				this.OnPropertyChanged("msfsi_BalloonTermCount");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_costofimprovements")]
		public Microsoft.Xrm.Sdk.Money msfsi_Costofimprovements
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_costofimprovements");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_Costofimprovements");
				this.SetAttributeValue("msfsi_costofimprovements", value);
				this.OnPropertyChanged("msfsi_Costofimprovements");
			}
		}
		
		/// <summary>
		/// Value of the Cost of improvements in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_costofimprovements_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_costofimprovements_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_costofimprovements_base");
			}
		}
		
		/// <summary>
		/// Amount of money to be paid as a deposit for the loan.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_depositamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_DepositAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_depositamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_DepositAmount");
				this.SetAttributeValue("msfsi_depositamount", value);
				this.OnPropertyChanged("msfsi_DepositAmount");
			}
		}
		
		/// <summary>
		/// Value of the Deposit Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_depositamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_depositamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_depositamount_base");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_describeimprovements")]
		public string msfsi_Describeimprovements
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_describeimprovements");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_Describeimprovements");
				this.SetAttributeValue("msfsi_describeimprovements", value);
				this.OnPropertyChanged("msfsi_Describeimprovements");
			}
		}
		
		/// <summary>
		/// Fees to be paid to the lender at closing in exchange for a reduced interest rate.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_discountpointstotalamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_DiscountPointsTotalAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_discountpointstotalamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_DiscountPointsTotalAmount");
				this.SetAttributeValue("msfsi_discountpointstotalamount", value);
				this.OnPropertyChanged("msfsi_DiscountPointsTotalAmount");
			}
		}
		
		/// <summary>
		/// Value of the Discount Points Total Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_discountpointstotalamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_discountpointstotalamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_discountpointstotalamount_base");
			}
		}
		
		/// <summary>
		/// Amount of down payment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_downpayment")]
		public Microsoft.Xrm.Sdk.Money msfsi_DownPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_downpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_DownPayment");
				this.SetAttributeValue("msfsi_downpayment", value);
				this.OnPropertyChanged("msfsi_DownPayment");
			}
		}
		
		/// <summary>
		/// Value of the Down Payment in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_downpayment_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_downpayment_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_downpayment_base");
			}
		}
		
		/// <summary>
		/// Amount to be paid to escrow.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_escrowpaymentamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_EscrowPaymentAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_escrowpaymentamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_EscrowPaymentAmount");
				this.SetAttributeValue("msfsi_escrowpaymentamount", value);
				this.OnPropertyChanged("msfsi_EscrowPaymentAmount");
			}
		}
		
		/// <summary>
		/// Value of the Escrow Payment Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_escrowpaymentamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_escrowpaymentamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_escrowpaymentamount_base");
			}
		}
		
		/// <summary>
		/// The financing type of the loan application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_financingtype")]
		public virtual msfsi_LoanApplication_msfsi_FinancingType? msfsi_FinancingType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_FinancingType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_financingtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_FinancingType");
				this.SetAttributeValue("msfsi_financingtype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_FinancingType");
			}
		}
		
		/// <summary>
		/// Calculated installment to be paid for the first month.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_firstmonthinterestamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_FirstMonthInterestAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_firstmonthinterestamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_FirstMonthInterestAmount");
				this.SetAttributeValue("msfsi_firstmonthinterestamount", value);
				this.OnPropertyChanged("msfsi_FirstMonthInterestAmount");
			}
		}
		
		/// <summary>
		/// Value of the First Month Interest Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_firstmonthinterestamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_firstmonthinterestamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_firstmonthinterestamount_base");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_integrationkey")]
		public string msfsi_IntegrationKey
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_integrationkey");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_IntegrationKey");
				this.SetAttributeValue("msfsi_integrationkey", value);
				this.OnPropertyChanged("msfsi_IntegrationKey");
			}
		}
		
		/// <summary>
		/// Term in months for interest only if "InterestOnlyIndicator" is true
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_interestonlytermmonthcount")]
		public System.Nullable<int> msfsi_InterestOnlyTermMonthCount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msfsi_interestonlytermmonthcount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_InterestOnlyTermMonthCount");
				this.SetAttributeValue("msfsi_interestonlytermmonthcount", value);
				this.OnPropertyChanged("msfsi_InterestOnlyTermMonthCount");
			}
		}
		
		/// <summary>
		/// The loan application interest rate.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_interestrate")]
		public System.Nullable<decimal> msfsi_InterestRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msfsi_interestrate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_InterestRate");
				this.SetAttributeValue("msfsi_interestrate", value);
				this.OnPropertyChanged("msfsi_InterestRate");
			}
		}
		
		/// <summary>
		/// The type of interest applied to the loan: fixed, periodical, floating, etc.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_interesttype")]
		public virtual msfsi_LoanApplication_msfsi_InterestType? msfsi_InterestType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_InterestType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_interesttype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_InterestType");
				this.SetAttributeValue("msfsi_interesttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_InterestType");
			}
		}
		
		/// <summary>
		/// When "Yes", indicates that a final Balloon payment is required to fully pay off the loan
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_isballoonpayment")]
		public System.Nullable<bool> msfsi_IsBalloonPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msfsi_isballoonpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_IsBalloonPayment");
				this.SetAttributeValue("msfsi_isballoonpayment", value);
				this.OnPropertyChanged("msfsi_IsBalloonPayment");
			}
		}
		
		/// <summary>
		/// When "Yes", indicated that the loan is Interest only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_isinterestonly")]
		public System.Nullable<bool> msfsi_IsInterestOnly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msfsi_isinterestonly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_IsInterestOnly");
				this.SetAttributeValue("msfsi_isinterestonly", value);
				this.OnPropertyChanged("msfsi_IsInterestOnly");
			}
		}
		
		/// <summary>
		/// When "Yes", indicates that the loan terms allow unpaid interest to be added to the principal of the loan that can or will result in negative amortization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_isnegativeamortization")]
		public System.Nullable<bool> msfsi_IsNegativeAmortization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("msfsi_isnegativeamortization");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_IsNegativeAmortization");
				this.SetAttributeValue("msfsi_isnegativeamortization", value);
				this.OnPropertyChanged("msfsi_IsNegativeAmortization");
			}
		}
		
		/// <summary>
		/// The lending limit applicable to the loan application, based on the specific loan guidelines
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_lendinglimit")]
		public Microsoft.Xrm.Sdk.Money msfsi_LendingLimit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_lendinglimit");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LendingLimit");
				this.SetAttributeValue("msfsi_lendinglimit", value);
				this.OnPropertyChanged("msfsi_LendingLimit");
			}
		}
		
		/// <summary>
		/// Value of the Lending Limit in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_lendinglimit_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_lendinglimit_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_lendinglimit_base");
			}
		}
		
		/// <summary>
		/// Date and time when the loan application was closed.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanapplicationclosingdate")]
		public System.Nullable<System.DateTime> msfsi_LoanApplicationClosingDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("msfsi_loanapplicationclosingdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationClosingDate");
				this.SetAttributeValue("msfsi_loanapplicationclosingdate", value);
				this.OnPropertyChanged("msfsi_LoanApplicationClosingDate");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanapplicationid")]
		public System.Nullable<System.Guid> msfsi_LoanApplicationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("msfsi_loanapplicationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationId");
				this.SetAttributeValue("msfsi_loanapplicationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("msfsi_LoanApplicationId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanapplicationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.msfsi_LoanApplicationId = value;
			}
		}
		
		/// <summary>
		/// Describes the category of the loan
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loancategory")]
		public virtual msfsi_LoanApplication_msfsi_LoanCategory? msfsi_LoanCategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_LoanCategory?)(EntityOptionSetEnum.GetEnum(this, "msfsi_loancategory")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanCategory");
				this.SetAttributeValue("msfsi_loancategory", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_LoanCategory");
			}
		}
		
		/// <summary>
		/// User representing a banking officer who was the originator of, and owns, the loan application.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanoriginator")]
		public Microsoft.Xrm.Sdk.EntityReference msfsi_LoanOriginator
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfsi_loanoriginator");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanOriginator");
				this.SetAttributeValue("msfsi_loanoriginator", value);
				this.OnPropertyChanged("msfsi_LoanOriginator");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanorrefinancepurpose")]
		public virtual msfsi_LoanApplication_msfsi_LoanorrefinancePurpose? msfsi_LoanorrefinancePurpose
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_LoanorrefinancePurpose?)(EntityOptionSetEnum.GetEnum(this, "msfsi_loanorrefinancepurpose")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanorrefinancePurpose");
				this.SetAttributeValue("msfsi_loanorrefinancepurpose", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_LoanorrefinancePurpose");
			}
		}
		
		/// <summary>
		/// Number of months for which the loan will be paid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loanterm")]
		public System.Nullable<int> msfsi_LoanTerm
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msfsi_loanterm");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanTerm");
				this.SetAttributeValue("msfsi_loanterm", value);
				this.OnPropertyChanged("msfsi_LoanTerm");
			}
		}
		
		/// <summary>
		/// Loan to value for a given proposition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loantovalue")]
		public System.Nullable<decimal> msfsi_LoanToValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msfsi_loantovalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanToValue");
				this.SetAttributeValue("msfsi_loantovalue", value);
				this.OnPropertyChanged("msfsi_LoanToValue");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_loantype")]
		public virtual msfsi_LoanApplication_msfsi_LoanType? msfsi_LoanType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_LoanType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_loantype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanType");
				this.SetAttributeValue("msfsi_loantype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_LoanType");
			}
		}
		
		/// <summary>
		/// Placeholder for Loan tracker view
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_lookupplaceholder")]
		public Microsoft.Xrm.Sdk.EntityReference msfsi_LookupPlaceholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfsi_lookupplaceholder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LookupPlaceholder");
				this.SetAttributeValue("msfsi_lookupplaceholder", value);
				this.OnPropertyChanged("msfsi_LookupPlaceholder");
			}
		}
		
		/// <summary>
		/// Maximum loan to value allowed for the proposition.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_maxloantovalue")]
		public System.Nullable<decimal> msfsi_MaxLoanToValue
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("msfsi_maxloantovalue");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_MaxLoanToValue");
				this.SetAttributeValue("msfsi_maxloantovalue", value);
				this.OnPropertyChanged("msfsi_MaxLoanToValue");
			}
		}
		
		/// <summary>
		/// Required name field
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_name")]
		public string msfsi_Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_Name");
				this.SetAttributeValue("msfsi_name", value);
				this.OnPropertyChanged("msfsi_Name");
			}
		}
		
		/// <summary>
		/// The amount to be repaid as disclosed on the note.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_noteamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_NoteAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_noteamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_NoteAmount");
				this.SetAttributeValue("msfsi_noteamount", value);
				this.OnPropertyChanged("msfsi_NoteAmount");
			}
		}
		
		/// <summary>
		/// Value of the Note Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_noteamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_noteamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_noteamount_base");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_primaryapplicant")]
		public Microsoft.Xrm.Sdk.EntityReference msfsi_PrimaryApplicant
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("msfsi_primaryapplicant");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_PrimaryApplicant");
				this.SetAttributeValue("msfsi_primaryapplicant", value);
				this.OnPropertyChanged("msfsi_PrimaryApplicant");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_primarymemberhelper")]
		public string msfsi_PrimaryMemberHelper
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_primarymemberhelper");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_PrimaryMemberHelper");
				this.SetAttributeValue("msfsi_primarymemberhelper", value);
				this.OnPropertyChanged("msfsi_PrimaryMemberHelper");
			}
		}
		
		/// <summary>
		/// Amount of money borrowed for the loan.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_principalamount")]
		public Microsoft.Xrm.Sdk.Money msfsi_PrincipalAmount
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_principalamount");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_PrincipalAmount");
				this.SetAttributeValue("msfsi_principalamount", value);
				this.OnPropertyChanged("msfsi_PrincipalAmount");
			}
		}
		
		/// <summary>
		/// Value of the Principal Amount in base currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_principalamount_base")]
		public Microsoft.Xrm.Sdk.Money msfsi_principalamount_Base
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.Money>("msfsi_principalamount_base");
			}
		}
		
		/// <summary>
		/// Type of refinance loan.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_refinancetype")]
		public virtual msfsi_LoanApplication_msfsi_RefinanceType? msfsi_RefinanceType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_msfsi_RefinanceType?)(EntityOptionSetEnum.GetEnum(this, "msfsi_refinancetype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_RefinanceType");
				this.SetAttributeValue("msfsi_refinancetype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_RefinanceType");
			}
		}
		
		/// <summary>
		/// Source of Down Payment, Settlement Charges, and/or Subordinate Financing
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_sourceofdownpayment")]
		public string msfsi_SourceofDownPayment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_sourceofdownpayment");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_SourceofDownPayment");
				this.SetAttributeValue("msfsi_sourceofdownpayment", value);
				this.OnPropertyChanged("msfsi_SourceofDownPayment");
			}
		}
		
		/// <summary>
		/// Number of months for which the loan will be paid.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_term")]
		public System.Nullable<int> msfsi_Term
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("msfsi_term");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_Term");
				this.SetAttributeValue("msfsi_term", value);
				this.OnPropertyChanged("msfsi_Term");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_textplaceholder")]
		public string msfsi_TextPlaceholder
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("msfsi_textplaceholder");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_TextPlaceholder");
				this.SetAttributeValue("msfsi_textplaceholder", value);
				this.OnPropertyChanged("msfsi_TextPlaceholder");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_verificationstatus")]
		public virtual msfsi_Verificationstatus? msfsi_verificationStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_Verificationstatus?)(EntityOptionSetEnum.GetEnum(this, "msfsi_verificationstatus")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_verificationStatus");
				this.SetAttributeValue("msfsi_verificationstatus", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("msfsi_verificationStatus");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Contains the id of the process associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> processid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("processid");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("processid");
			}
		}
		
		/// <summary>
		/// Contains the id of the stage where the entity is located.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> stageid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("stageid");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("stageid");
			}
		}
		
		/// <summary>
		/// Status of the Loan Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<msfsi_LoanApplicationState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((msfsi_LoanApplicationState)(System.Enum.ToObject(typeof(msfsi_LoanApplicationState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Loan Application
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual msfsi_LoanApplication_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((msfsi_LoanApplication_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Unique identifier of the currency associated with the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// A comma separated list of string values representing the unique identifiers of stages in a Business Process Flow Instance in the order that they occur.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traversedpath")]
		public string traversedpath
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("traversedpath");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("traversedpath");
				this.SetAttributeValue("traversedpath", value);
				this.OnPropertyChanged("traversedpath");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_employment_LoanApplication
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_employment_LoanApplication")]
		public System.Collections.Generic.IEnumerable<msfsi_employment> msfsi_employment_LoanApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_employment>("msfsi_employment_LoanApplication", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_employment_LoanApplication");
				this.SetRelatedEntities<msfsi_employment>("msfsi_employment_LoanApplication", null, value);
				this.OnPropertyChanged("msfsi_employment_LoanApplication");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_loanapplication_msfsi_applicationdocument
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_loanapplication_msfsi_applicationdocument")]
		public System.Collections.Generic.IEnumerable<msfsi_ApplicationDocument> msfsi_loanapplication_msfsi_applicationdocument
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_ApplicationDocument>("msfsi_loanapplication_msfsi_applicationdocument", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_loanapplication_msfsi_applicationdocument");
				this.SetRelatedEntities<msfsi_ApplicationDocument>("msfsi_loanapplication_msfsi_applicationdocument", null, value);
				this.OnPropertyChanged("msfsi_loanapplication_msfsi_applicationdocument");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_LoanApplicationAsset_LoanApplication
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplicationAsset_LoanApplication")]
		public System.Collections.Generic.IEnumerable<msfsi_LoanApplicationAsset> msfsi_LoanApplicationAsset_LoanApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_LoanApplicationAsset>("msfsi_LoanApplicationAsset_LoanApplication", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationAsset_LoanApplication");
				this.SetRelatedEntities<msfsi_LoanApplicationAsset>("msfsi_LoanApplicationAsset_LoanApplication", null, value);
				this.OnPropertyChanged("msfsi_LoanApplicationAsset_LoanApplication");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_LoanApplicationCollateral_LoanAppli
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplicationCollateral_LoanAppli")]
		public System.Collections.Generic.IEnumerable<msfsi_LoanApplicationCollateral> msfsi_LoanApplicationCollateral_LoanAppli
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_LoanApplicationCollateral>("msfsi_LoanApplicationCollateral_LoanAppli", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationCollateral_LoanAppli");
				this.SetRelatedEntities<msfsi_LoanApplicationCollateral>("msfsi_LoanApplicationCollateral_LoanAppli", null, value);
				this.OnPropertyChanged("msfsi_LoanApplicationCollateral_LoanAppli");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_LoanApplicationContact_LoanApplicat
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplicationContact_LoanApplicat")]
		public System.Collections.Generic.IEnumerable<msfsi_LoanApplicationContact> msfsi_LoanApplicationContact_LoanApplicat
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_LoanApplicationContact>("msfsi_LoanApplicationContact_LoanApplicat", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationContact_LoanApplicat");
				this.SetRelatedEntities<msfsi_LoanApplicationContact>("msfsi_LoanApplicationContact_LoanApplicat", null, value);
				this.OnPropertyChanged("msfsi_LoanApplicationContact_LoanApplicat");
			}
		}
		
		/// <summary>
		/// 1:N msfsi_LoanApplicationLiability_LoanApplication
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplicationLiability_LoanApplication")]
		public System.Collections.Generic.IEnumerable<msfsi_LoanApplicationLiability> msfsi_LoanApplicationLiability_LoanApplication
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<msfsi_LoanApplicationLiability>("msfsi_LoanApplicationLiability_LoanApplication", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplicationLiability_LoanApplication");
				this.SetRelatedEntities<msfsi_LoanApplicationLiability>("msfsi_LoanApplicationLiability_LoanApplication", null, value);
				this.OnPropertyChanged("msfsi_LoanApplicationLiability_LoanApplication");
			}
		}
		
		/// <summary>
		/// N:1 msfsi_LoanApplication_LookupPlaceholder_m
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_lookupplaceholder")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplication_LookupPlaceholder_m")]
		public msfsi_LoanApplicationContact msfsi_LoanApplication_LookupPlaceholder_m
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<msfsi_LoanApplicationContact>("msfsi_LoanApplication_LookupPlaceholder_m", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplication_LookupPlaceholder_m");
				this.SetRelatedEntity<msfsi_LoanApplicationContact>("msfsi_LoanApplication_LookupPlaceholder_m", null, value);
				this.OnPropertyChanged("msfsi_LoanApplication_LookupPlaceholder_m");
			}
		}
		
		/// <summary>
		/// N:1 msfsi_LoanApplication_PrimaryApplicant_ms
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("msfsi_primaryapplicant")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msfsi_LoanApplication_PrimaryApplicant_ms")]
		public msfsi_LoanApplicationContact msfsi_LoanApplication_PrimaryApplicant_ms
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<msfsi_LoanApplicationContact>("msfsi_LoanApplication_PrimaryApplicant_ms", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msfsi_LoanApplication_PrimaryApplicant_ms");
				this.SetRelatedEntity<msfsi_LoanApplicationContact>("msfsi_LoanApplication_PrimaryApplicant_ms", null, value);
				this.OnPropertyChanged("msfsi_LoanApplication_PrimaryApplicant_ms");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public msfsi_LoanApplication(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["msfsi_loanapplicationid"] = base.Id;
                        break;
                    case "msfsi_loanapplicationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}